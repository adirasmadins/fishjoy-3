var bulletItem = cc.Sprite.extend({
    ctor:function(x, y, rot, size, life, name){
        this._super();
        this.name = name;
        this.size = size;
        this.angle = rot;
        this.speed = bulletSpeed;
        this.acc = bulletAcc;
        this.moving = true;
        this.captured = false;
        this.active = true;
        this.life = cannonSizeList[size-1].life;
        this.capturingCounter = captureSegment;
        this.timetick = 0;

        var _src = asset_folder+getSource("bullet"+this.size);
        this.initWithFile(_src);

        var posX = x;
        var posY = y;

        this.setPosition(cc.p(posX, posY));
        this.setRotation(this.angle);

        this.speedY = this.speed * Math.cos(this.angle*DEG_TO_RAD);
        this.speedX = this.speed * Math.sin(this.angle*DEG_TO_RAD);

        this.accY = this.acc * Math.cos(this.angle*DEG_TO_RAD);
        this.accX = this.acc * Math.sin(this.angle*DEG_TO_RAD);

        gameLayer.addBody(posX, posY, this.width, this.height, this.angle, true, this, "bullet", this.life);

        this.scheduleUpdate();
    },
    update:function(){
        this.speedX += this.accX;
        this.speedY += this.accY;

        var posX = this.getPosition().x + this.speedX;
        var posY = this.getPosition().y + this.speedY;

        if(this.checkBorder(posX, posY)){
            this.setPosition(posX, posY);
        }else{
            this.destroy();
        }
    },
    checkBorder: function (x,y) {
        if(x > -this._getWidth() && x < screen_width + this._getWidth() && y > - this._getWidth() && y < screen_height + this._getWidth()){
            return true;
        }
        return false;
    },
    getLife: function () {
      return this.life;
    },
    destroy: function () {
        //removeBox2dBody(this);
        removeShapeBody(this, "bullet");
        removeFromBulletList(this);
        bulletLayer.removeChild(this);
    }
});
